This is a simple wrapper for running xfstests inside avocado. The steps to get
started are really simple:

1) Edit the configuration variables on the yaml file as well environment variable

1.1) The variables 'TEST_DEV' and 'TEST_DIR' are mandatory and should be set to
     a block device path and mount point path, respectively, that will be used
     *exclusively* for xfstests. It must have the filesystem of your choice
     previously created.
     ex : export TEST_DEV =/dev/vda1 , export TEST_DIR=/mnt

     DO NOT USE A BLOCK DEVICE WITH IMPORTANT DATA!!!

1.2) Set the range of tests you want to run setting the TEST_RANGE variable.
     Please notice that python's range() function may not work as you expect,
     that is, if you want a range from 0-255, use: range(0, 256)

General notes
-------------

* As autotest includes a setup phase for client tests, this step is encapsulated
in a dummy xfstests number 000.

* XFS utilities, system libraries and header files are checked early, before
trying to build xfstests. Make sure you resolve those dependencies.

* Some tests are not relevant to filesystems other than XFS, so they will return
as TEST_NA.

* Be extra careful when using TEST_DEV with device-mapper based block devices.
For instance, xfstests may not be able to figure out that /dev/<vg>/<lv> is
actually a link to /dev/mapper/vg-lv. Tests will then fail to check that the
device is mounted.

* As a convenience the default config file uses a virtual partition, so people
can try it out the tests without having an actual spare device. However the
virtual partition depends on the following programs to be available:
     * sfdisk
     * losetup
     * kpartx
Make sure you have them or a real spare device to test things.
"""

